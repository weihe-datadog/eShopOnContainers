version: '3.4'

x-common-env: &common-env
  environment:
    CORECLR_ENABLE_PROFILING: "1"
    CORECLR_PROFILER: "{846F5F1C-F9AE-4B07-969E-05C26BC060D8}"
    CORECLR_PROFILER_PATH: "/opt/datadog/Datadog.Trace.ClrProfiler.Native.so"
    DD_DOTNET_TRACER_HOME: "/opt/datadog"
    DD_TRACE_ENABLED: "true"
    DD_TRACE_DEBUG: "true"
    DD_AGENT_HOST: "docker.for.mac.localhost"
    DD_DYNAMIC_INSTRUMENTATION_ENABLED: "true"
    DD_EXCEPTION_DEBUGGING_ENABLED: "true"
    DD_LOGS_INJECTION: "true"
    DD_TRACE_SPAN_ORIGIN_ENABLED: "true"
    DD_TRACE_SPAN_ORIGIN_ENRICHED: "true"
    DD_GIT_COMMIT_SHA: "d210e7e1f4d5b75ec2a9625d4c190e6d151df518"
    DD_GIT_REPOSITORY_URL: "https://github.com/weihe-datadog/eShopOnContainers.git"
    COUPON_DATABASE_URL: postgresql://coupon_manager:admin@coupondb:5432/coupon_management

x-common-build-args: &common-build-args
  args:
    DD_TRACER: "https://artprodcus3.artifacts.visualstudio.com/A124c910c-3307-4c7f-b5dc-36cb208d4211/a51c4863-3eb4-4c5d-878a-58b41a049e4e/_apis/artifact/cGlwZWxpbmVhcnRpZmFjdDovL2RhdGFkb2docS9wcm9qZWN0SWQvYTUxYzQ4NjMtM2ViNC00YzVkLTg3OGEtNThiNDFhMDQ5ZTRlL2J1aWxkSWQvMTU2MDgxL2FydGlmYWN0TmFtZS8yLjQ5LjAtcmVsZWFzZS1hcnRpZmFjdHM1/content?format=file&subPath=%2Fdatadog-dotnet-apm-2.49.0.arm64.tar.gz"
    DD_TRACER_PY: "git+https://github.com/DataDog/dd-trace-py.git@7cc6b38b1c080d1f82e7a8dc4e6d868ce713e728"
services:

  seq:
    image: datalust/seq:latest

  sqldata:
    image: mcr.microsoft.com/mssql/server:2019-latest 

  nosqldata:
    image: mongo

  basketdata:
    image: redis:alpine

  rabbitmq:
    image: rabbitmq:3-management-alpine

  identity-api:
    image: ${REGISTRY:-eshop}/identity.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Identity/Identity.API/Dockerfile
      <<: *common-build-args
    depends_on:
      - sqldata
    <<: *common-env

  basket-api:
    image: ${REGISTRY:-eshop}/basket.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
      <<: *common-build-args
    depends_on:
      - basketdata
      - identity-api
      - rabbitmq
    <<: *common-env

  catalog-api:
    image: ${REGISTRY:-eshop}/catalog.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
      <<: *common-build-args
    depends_on:
      - sqldata
      - rabbitmq
    <<: *common-env

  ordering-api:
    image: ${REGISTRY:-eshop}/ordering.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
      <<: *common-build-args
    depends_on:
      - sqldata
      - rabbitmq
    <<: *common-env

  ordering-backgroundtasks:
    image: ${REGISTRY:-eshop}/ordering.backgroundtasks:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.BackgroundTasks/Dockerfile
      <<: *common-build-args
    depends_on:
      - sqldata
      - rabbitmq
    <<: *common-env

  payment-api:
    image: ${REGISTRY:-eshop}/payment.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Payment/Payment.API/Dockerfile
      <<: *common-build-args
    depends_on:
      - rabbitmq
    <<: *common-env

  webhooks-api:
    image: ${REGISTRY:-eshop}/webhooks.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Webhooks/Webhooks.API/Dockerfile
      <<: *common-build-args
    depends_on:
      - sqldata
    <<: *common-env

  mobileshoppingapigw:
    image: envoyproxy/envoy:v1.11.1

  mobileshoppingagg:
    image: ${REGISTRY:-eshop}/mobileshoppingagg:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: ApiGateways/Mobile.Bff.Shopping/aggregator/Dockerfile
      <<: *common-build-args
    depends_on:
      - nosqldata
      - sqldata
      - identity-api
      - rabbitmq
      - ordering-api
      - catalog-api
      - basket-api
    <<: *common-env

  webshoppingagg:
    image: ${REGISTRY:-eshop}/webshoppingagg:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: ApiGateways/Web.Bff.Shopping/aggregator/Dockerfile
      <<: *common-build-args
    depends_on:
      - nosqldata
      - sqldata
      - identity-api
      - rabbitmq
      - ordering-api
      - catalog-api
      - basket-api
    <<: *common-env

  ordering-signalrhub:
    image: ${REGISTRY:-eshop}/ordering.signalrhub:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.SignalrHub/Dockerfile
      <<: *common-build-args
    depends_on:
      - nosqldata
      - sqldata
      - identity-api
      - rabbitmq
      - ordering-api
      - catalog-api
      - basket-api
    <<: *common-env

  webstatus:
    image: ${REGISTRY:-eshop}/webstatus:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Web/WebStatus/Dockerfile

  webspa:
    image: ${REGISTRY:-eshop}/webspa:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Web/WebSPA/Dockerfile
      args:
        NODE_IMAGE: ${NODE_IMAGE:-node:12.0}
    depends_on:
      - webshoppingagg
      - webshoppingapigw

  webmvc:
    image: ${REGISTRY:-eshop}/webmvc:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Web/WebMVC/Dockerfile
      <<: *common-build-args
    platform: linux/arm64
    depends_on:
      - webshoppingagg
      - webshoppingapigw
      - coupon-api
    <<: *common-env

  webhooks-client:
    image: ${REGISTRY:-eshop}/webhooks.client:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Web/WebhookClient/Dockerfile
      <<: *common-build-args
    depends_on:
      - webhooks-api
    <<: *common-env

  coupondb:
    image: postgres:latest
    environment:
      POSTGRES_DB: coupon_management
      POSTGRES_USER: coupon_manager
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./Web/Coupon/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
  webshoppingapigw:
    image: envoyproxy/envoy:v1.11.1

  coupon-api:
    image: ${REGISTRY:-eshop}/coupon.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: Web/Coupon
      dockerfile: ./Dockerfile
      <<: *common-build-args
    command: ddtrace-run python3 app.py
    volumes:
      - .:/code
    ports:
      - "5000:5000"
    depends_on:
      - coupondb
    <<: *common-env

volumes:
  pgdata: